Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
}
library(conflicted)
library(tidyverse)
library(segmented)
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble()
df
cogs <- c('MMSE', 'N5', 'N1.N5', 'R.Odelay', 'TMT.A', 'SDMT', 'VFT', 'BNT', 'TMT.B', 'StropCTime')
res.tab <- tibble()
for (cog in cogs) {
# cog <- cogs[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(cog)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], x = scale(x)[,1], y = scale(y)[,1])
# linear model, 0 break point
# 0 break point
tmp.model.linear <- lm(y ~ Age + EDUTotal + x, data=tmp.df)
tmp.res.model.linear <- summary(tmp.model.linear)
# 1 break point
tmp.model.1point <- segmented(tmp.model.linear, seg.Z = ~x, npsi = 1)
tmp.res.model.1point <- summary(tmp.model.1point)
# 2 break point
tmp.model.2point <- segmented::segmented(tmp.model.linear, seg.Z = ~x, npsi = 2)
tmp.res.model.2point <- summary(tmp.model.2point)
res.tab <- res.tab %>%
bind_rows(.,
list(
Cognition = cog,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
}
colnames(df)
library(conflicted)
library(tidyverse)
library(segmented)
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble()
df
cogs <- c('MMSE', 'N5', 'N1.N5', 'R.Odelay', 'TMT.A', 'SDMT', 'VFT', 'BNT', 'TMT.B', 'StroopCTime')
res.tab <- tibble()
for (cog in cogs) {
# cog <- cogs[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(cog)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], x = scale(x)[,1], y = scale(y)[,1])
# linear model, 0 break point
# 0 break point
tmp.model.linear <- lm(y ~ Age + EDUTotal + x, data=tmp.df)
tmp.res.model.linear <- summary(tmp.model.linear)
# 1 break point
tmp.model.1point <- segmented(tmp.model.linear, seg.Z = ~x, npsi = 1)
tmp.res.model.1point <- summary(tmp.model.1point)
# 2 break point
tmp.model.2point <- segmented::segmented(tmp.model.linear, seg.Z = ~x, npsi = 2)
tmp.res.model.2point <- summary(tmp.model.2point)
res.tab <- res.tab %>%
bind_rows(.,
list(
Cognition = cog,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
}
res.tab
writexl::write_xlsx(res.tab, 'ResStat-SegmentedLinear_cognition.xlsx')
tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x)
tmp.res.model.1point$psi[2]
tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x)
mean(tmp.df$x)
library(conflicted)
library(tidyverse)
library(segmented)
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble()
df
cogs <- c('MMSE', 'N5', 'N1.N5', 'R.Odelay', 'TMT.A', 'SDMT', 'VFT', 'BNT', 'TMT.B', 'StroopCTime')
res.tab <- tibble()
for (cog in cogs) {
# cog <- cogs[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(cog)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], xz = scale(x)[,1], y = scale(y)[,1])
# linear model, 0 break point
# 0 break point
tmp.model.linear <- lm(y ~ Age + EDUTotal + xz, data=tmp.df)
tmp.res.model.linear <- summary(tmp.model.linear)
# 1 break point
tmp.model.1point <- segmented(tmp.model.linear, seg.Z = ~xz, npsi = 1)
tmp.res.model.1point <- summary(tmp.model.1point)
# 2 break point
tmp.model.2point <- segmented::segmented(tmp.model.linear, seg.Z = ~xz, npsi = 2)
tmp.res.model.2point <- summary(tmp.model.2point)
res.tab <- res.tab %>%
bind_rows(.,
list(
Cognition = cog,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
}
res.tab
writexl::write_xlsx(res.tab, 'ResStat-SegmentedLinear_cognition.xlsx')
library(conflicted)
library(tidyverse)
library(segmented)
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble()
df
cogs <- c('MMSE', 'N5', 'N1.N5', 'R.Odelay', 'TMT.A', 'SDMT', 'VFT', 'BNT', 'TMT.B', 'StroopCTime')
res.tab <- tibble()
for (cog in cogs) {
# cog <- cogs[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(cog)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], xz = scale(x)[,1], y = scale(y)[,1])
# linear model, 0 break point
# 0 break point
tmp.model.linear <- lm(y ~ Age + EDUTotal + xz, data=tmp.df)
tmp.res.model.linear <- summary(tmp.model.linear)
# 1 break point
tmp.model.1point <- segmented(tmp.model.linear, seg.Z = ~xz, npsi = 1)
tmp.res.model.1point <- summary(tmp.model.1point)
# 2 break point
tmp.model.2point <- segmented::segmented(tmp.model.linear, seg.Z = ~xz, npsi = 2)
tmp.res.model.2point <- summary(tmp.model.2point)
res.tab <- res.tab %>%
bind_rows(.,
list(
Cognition = cog,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
# Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
# Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
# Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
}
res.tab
writexl::write_xlsx(res.tab, 'ResStat-SegmentedLinear_cognition.xlsx')
df <- read_excel('wmh_withlg') %>%
as_tibble()
df
df <- read_excel('wmh_withlg.xlsx') %>%
as_tibble()
df
colnames(df)
df <- read_excel('wmh_withlg.xlsx') %>%
as_tibble()
df
meas <- c('lg_volume', 'lg_wmh_tiv', 'wmh_tiv_100000_lg')
res.tab <- tibble()
cog <- cogs[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(mea)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], xz = scale(x)[,1], y = scale(y)[,1])
mea <- meas[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(mea)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], xz = scale(x)[,1], y = scale(y)[,1])
tmp.df
# linear model, 0 break point
# 0 break point
tmp.model.linear <- lm(y ~ Age + EDUTotal + xz, data=tmp.df)
tmp.res.model.linear <- summary(tmp.model.linear)
# 1 break point
tmp.model.1point <- segmented(tmp.model.linear, seg.Z = ~xz, npsi = 1)
tmp.res.model.1point <- summary(tmp.model.1point)
# 2 break point
tmp.model.2point <- segmented::segmented(tmp.model.linear, seg.Z = ~xz, npsi = 2)
tmp.res.model.2point <- summary(tmp.model.2point)
res.tab <- res.tab %>%
bind_rows(.,
list(
Cognition = cog,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
# Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
# Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
# Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
for (mea in meas) {
mea <- meas[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(mea)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], xz = scale(x)[,1], y = scale(y)[,1])
# linear model, 0 break point
# 0 break point
tmp.model.linear <- lm(y ~ Age + EDUTotal + xz, data=tmp.df)
tmp.res.model.linear <- summary(tmp.model.linear)
# 1 break point
tmp.model.1point <- segmented(tmp.model.linear, seg.Z = ~xz, npsi = 1)
tmp.res.model.1point <- summary(tmp.model.1point)
# 2 break point
tmp.model.2point <- segmented::segmented(tmp.model.linear, seg.Z = ~xz, npsi = 2)
tmp.res.model.2point <- summary(tmp.model.2point)
res.tab <- res.tab %>%
bind_rows(.,
list(
Cognition = cog,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
# Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
# Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
# Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
}
res.tab
res.tab <- res.tab %>%
bind_rows(.,
list(
Measure = mea,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
# Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
# Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
# Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
for (mea in meas) {
mea <- meas[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(mea)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], xz = scale(x)[,1], y = scale(y)[,1])
# linear model, 0 break point
# 0 break point
tmp.model.linear <- lm(y ~ Age + EDUTotal + xz, data=tmp.df)
tmp.res.model.linear <- summary(tmp.model.linear)
# 1 break point
tmp.model.1point <- segmented(tmp.model.linear, seg.Z = ~xz, npsi = 1)
tmp.res.model.1point <- summary(tmp.model.1point)
# 2 break point
tmp.model.2point <- segmented::segmented(tmp.model.linear, seg.Z = ~xz, npsi = 2)
tmp.res.model.2point <- summary(tmp.model.2point)
res.tab <- res.tab %>%
bind_rows(.,
list(
Measure = mea,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
# Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
# Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
# Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
}
res.tab
res.tab <- tibble()
mea <- meas[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(mea)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], xz = scale(x)[,1], y = scale(y)[,1])
# linear model, 0 break point
# 0 break point
tmp.model.linear <- lm(y ~ Age + EDUTotal + xz, data=tmp.df)
tmp.res.model.linear <- summary(tmp.model.linear)
# 1 break point
tmp.model.1point <- segmented(tmp.model.linear, seg.Z = ~xz, npsi = 1)
tmp.res.model.1point <- summary(tmp.model.1point)
# 2 break point
tmp.model.2point <- segmented::segmented(tmp.model.linear, seg.Z = ~xz, npsi = 2)
tmp.res.model.2point <- summary(tmp.model.2point)
res.tab <- res.tab %>%
bind_rows(.,
list(
Measure = mea,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
# Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
# Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
# Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
res.tab
library(conflicted)
library(tidyverse)
library(segmented)
df <- read_excel('wmh_withlg.xlsx') %>%
as_tibble()
df
meas <- c('lg_volume', 'lg_wmh_tiv', 'wmh_tiv_100000_lg')
res.tab <- tibble()
for (mea in meas) {
# mea <- meas[1]
tmp.df <- df %>%
dplyr::select(Gender, Age, EDUTotal, x = all_of('JHTSCourseNew'), y = all_of(mea)) %>%
drop_na() %>%
mutate(x = as.numeric(x), Gender = as.factor(Gender)) %>%
dplyr::mutate(Age = scale(Age)[,1], EDUTotal = scale(EDUTotal)[,1], xz = scale(x)[,1], y = scale(y)[,1])
# linear model, 0 break point
# 0 break point
tmp.model.linear <- lm(y ~ Age + EDUTotal + xz, data=tmp.df)
tmp.res.model.linear <- summary(tmp.model.linear)
# 1 break point
tmp.model.1point <- segmented(tmp.model.linear, seg.Z = ~xz, npsi = 1)
tmp.res.model.1point <- summary(tmp.model.1point)
# 2 break point
tmp.model.2point <- segmented::segmented(tmp.model.linear, seg.Z = ~xz, npsi = 2)
tmp.res.model.2point <- summary(tmp.model.2point)
res.tab <- res.tab %>%
bind_rows(.,
list(
Measure = mea,
Point0_AdjRSquared=tmp.res.model.linear$adj.r.squared,
Point1_AdjRSquared=tmp.res.model.1point$adj.r.squared,
# Point1_Value=tmp.res.model.1point$psi[2],
Point1_OrigValue=tmp.res.model.1point$psi[2] * sd(tmp.df$x) + mean(tmp.df$x),
Point2_AdjRSquared=tmp.res.model.2point$adj.r.squared,
# Point2_Value1=tmp.res.model.2point$psi[1, 2],
Point2_OrigValue1=tmp.res.model.2point$psi[1, 2] * sd(tmp.df$x) + mean(tmp.df$x),
# Point2_Value2=tmp.res.model.2point$psi[2, 2],
Point2_OrigValue2=tmp.res.model.2point$psi[2, 2] * sd(tmp.df$x) + mean(tmp.df$x)
)
)
}
res.tab
writexl::write_xlsx(res.tab, 'ResStat-SegmentedLinear_wmh.xlsx')
# TMTB - TMTA
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na() %>%
# mutate(TMTAz = scale(TMT.A)[,1], TMTBz = scale(TMT.B)[,1]) %>%
# select(-c(TMT.A, TMT.B, `冠心病BS5`)) %>%
mutate(TMTBA = TMT.B - TMT.A)
df
hist(df$TMTBA)
# TMTB - TMTA
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na() %>%
# mutate(TMTAz = scale(TMT.A)[,1], TMTBz = scale(TMT.B)[,1]) %>%
# select(-c(TMT.A, TMT.B, `冠心病BS5`)) %>%
mutate(TMTBA = TMT.B - TMT.A) %>%
mutate(TMTBA = log(TMTBA))
df
# TMTB - TMTA
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na() %>%
# mutate(TMTAz = scale(TMT.A)[,1], TMTBz = scale(TMT.B)[,1]) %>%
# select(-c(TMT.A, TMT.B, `冠心病BS5`)) %>%
mutate(TMTBA = TMT.B - TMT.A) %>%
mutate(TMTBA = log(TMTBA))
df
# TMTB - TMTA
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na() %>%
# mutate(TMTAz = scale(TMT.A)[,1], TMTBz = scale(TMT.B)[,1]) %>%
# select(-c(TMT.A, TMT.B, `冠心病BS5`)) %>%
mutate(TMTBA = TMT.B - TMT.A) %>%
mutate(TMTBA = log(TMTBA))
summary(df$TMTBA)
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na()
summary(df$TMTB)
summary(df$TMT.B)
summary(df$TMT.A)
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na() %>%
# mutate(TMTAz = scale(TMT.A)[,1], TMTBz = scale(TMT.B)[,1]) %>%
# select(-c(TMT.A, TMT.B, `冠心病BS5`)) %>%
mutate(TMTBA = TMT.B - TMT.A)
summary(df$TMTBA)
# TMTB - TMTA
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na() %>%
# mutate(TMTAz = scale(TMT.A)[,1], TMTBz = scale(TMT.B)[,1]) %>%
# select(-c(TMT.A, TMT.B, `冠心病BS5`)) %>%
mutate(TMTBA = TMT.B - TMT.A) %>%
dplyr::filter(TMTBA > 0)
summary(df$TMTBA)
# TMTB - TMTA
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na() %>%
# mutate(TMTAz = scale(TMT.A)[,1], TMTBz = scale(TMT.B)[,1]) %>%
# select(-c(TMT.A, TMT.B, `冠心病BS5`)) %>%
mutate(TMTBA = TMT.B - TMT.A) %>%
dplyr::filter(TMTBA > 0) %>%
mutate(TMTBA = log(TMTBA))
df
mod <- lm(scale(TMTBA)~scale(Age)+Gender+scale(EDUTotal)+BS5+JHLP+JDiabetes+JCVD+GROUP, data = df)
res <- summary(aov(mod))
res
mod <- lm(scale(TMTBA)~scale(Age)+Gender+scale(EDUTotal)+GROUP, data = df)
res <- summary(aov(mod))
res
# TMTB - TMTA
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na() %>%
dplyr::filter((TMT.A < 300) & (TMT.B < 300)) %>%
# mutate(TMTAz = scale(TMT.A)[,1], TMTBz = scale(TMT.B)[,1]) %>%
# select(-c(TMT.A, TMT.B, `冠心病BS5`)) %>%
mutate(TMTBA = TMT.B - TMT.A) %>%
dplyr::filter(TMTBA > 0) %>%
mutate(TMTBA = log(TMTBA))
df
mod <- lm(scale(TMTBA)~scale(Age)+Gender+scale(EDUTotal)+BS5+JHLP+JDiabetes+JCVD+GROUP, data = df)
res <- summary(aov(mod))
res
mod <- lm(scale(TMTBA)~scale(Age)+Gender+scale(EDUTotal)+GROUP, data = df)
res <- summary(aov(mod))
res
# TMTB - TMTA
df <- read_excel('behavioural_sample_label.xlsx') %>%
as_tibble() %>%
dplyr::select(BH, GROUP, Gender, Age, EDUTotal, TMT.A, TMT.B, `冠心病BS5`, JDiabetes, JHLP, JCVD) %>%
mutate(GROUP = as.factor(GROUP), Gender = as.factor(Gender), Age = as.numeric(Age), EDUTotal = as.numeric(EDUTotal), BS5 = as.factor(`冠心病BS5`), JDiabetes = as.factor(JDiabetes), JHLP = as.factor(JHLP), JCVD = as.factor(JCVD)) %>%
drop_na() %>%
# dplyr::filter((TMT.A < 300) & (TMT.B < 300)) %>%
# mutate(TMTAz = scale(TMT.A)[,1], TMTBz = scale(TMT.B)[,1]) %>%
# select(-c(TMT.A, TMT.B, `冠心病BS5`)) %>%
mutate(TMTBA = TMT.B - TMT.A) %>%
dplyr::filter(TMTBA > 0) %>%
mutate(TMTBA = log(TMTBA))
